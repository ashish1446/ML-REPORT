\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Overview}{3}{section.1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}title}{4}{section.2}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Perceptron Recap}{5}{section.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces \relax }}{5}{figure.caption.2}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:perceptron}{{1}{5}{\relax }{figure.caption.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Multi-layer Perceptron}{6}{subsection.3.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Perceptron as Boolean gate}{7}{subsection.3.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces \relax }}{7}{figure.caption.3}}
\newlabel{fig:gate}{{2}{7}{\relax }{figure.caption.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Universal AND gate - AND any arbitrary number of inputs, of which any subset is negated\relax }}{8}{figure.caption.4}}
\newlabel{fig:and}{{3}{8}{Universal AND gate - AND any arbitrary number of inputs, of which any subset is negated\relax }{figure.caption.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Universal OR gate - OR any arbitrary number of inputs, of which any subset is negated\relax }}{8}{figure.caption.5}}
\newlabel{fig:and}{{4}{8}{Universal OR gate - OR any arbitrary number of inputs, of which any subset is negated\relax }{figure.caption.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Generalized Majority gate - For implementing the same with standard boolean circuit would require exponentially (in input) sized cicuit, but can be done with single threshold gate \relax }}{8}{figure.caption.6}}
\newlabel{fig:and}{{5}{8}{Generalized Majority gate - For implementing the same with standard boolean circuit would require exponentially (in input) sized cicuit, but can be done with single threshold gate \relax }{figure.caption.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Learning}{10}{section.4}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Here, g(x) is the function we want the NN to compute and f(x) is the funnction that we are computing\relax }}{10}{figure.caption.8}}
\newlabel{fig:error}{{6}{10}{Here, g(x) is the function we want the NN to compute and f(x) is the funnction that we are computing\relax }{figure.caption.8}{}}
